// <auto-generated />
using ComputerFifm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerFifm.Migrations
{
    [DbContext(typeof(serviceContext))]
    partial class serviceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComputerFifm.Models.ВидыКомплектующих", b =>
                {
                    b.Property<int>("КодВида")
                        .HasColumnName("Код_вида")
                        .HasColumnType("INT");

                    b.Property<int>("Наименование")
                        .HasColumnType("INT");

                    b.Property<int>("Описание")
                        .HasColumnType("INT");

                    b.HasKey("КодВида");

                    b.ToTable("Виды_комплектующих");
                });

            modelBuilder.Entity("ComputerFifm.Models.Должность", b =>
                {
                    b.Property<int>("КодДолжности")
                        .HasColumnName("Код_должности")
                        .HasColumnType("INT");

                    b.Property<int>("НаименованиеДолжности")
                        .HasColumnName("Наименование_должности")
                        .HasColumnType("INT");

                    b.Property<int>("Обязанности")
                        .HasColumnType("INT");

                    b.Property<int>("Оклад")
                        .HasColumnType("INT");

                    b.Property<int>("Требования")
                        .HasColumnType("INT");

                    b.HasKey("КодДолжности");

                    b.ToTable("Должность");
                });

            modelBuilder.Entity("ComputerFifm.Models.Заказчики", b =>
                {
                    b.Property<int>("КодЗаказчика")
                        .HasColumnName("Код_заказчика")
                        .HasColumnType("INT");

                    b.Property<int>("Адрес")
                        .HasColumnType("INT");

                    b.Property<int>("Телефон")
                        .HasColumnType("INT");

                    b.Property<int>("Фио")
                        .HasColumnName("ФИО")
                        .HasColumnType("INT");

                    b.HasKey("КодЗаказчика");

                    b.ToTable("Заказчики");
                });

            modelBuilder.Entity("ComputerFifm.Models.Заказы", b =>
                {
                    b.Property<int>("ДатаЗаказа")
                        .HasColumnName("Дата_заказа")
                        .HasColumnType("INT");

                    b.Property<int>("ДатаИсполнения")
                        .HasColumnName("Дата_исполнения")
                        .HasColumnType("INT");

                    b.Property<int>("ДоляПредоплаты")
                        .HasColumnName("Доля_предоплаты")
                        .HasColumnType("INT");

                    b.Property<int>("КодЗаказчика")
                        .HasColumnName("Код_заказчика")
                        .HasColumnType("INT");

                    b.Property<int>("КодКомплектующего")
                        .HasColumnName("Код_комплектующего")
                        .HasColumnType("INT");

                    b.Property<int>("КодКомплектующего1")
                        .HasColumnName("Код_комплектующего_1")
                        .HasColumnType("INT");

                    b.Property<int>("КодКомплектующего2")
                        .HasColumnName("Код_комплектующего_2")
                        .HasColumnType("INT");

                    b.Property<int>("КодКомплектующего3")
                        .HasColumnName("Код_комплектующего_3")
                        .HasColumnType("INT");

                    b.Property<int>("КодСотрудника")
                        .HasColumnName("Код_сотрудника")
                        .HasColumnType("INT");

                    b.Property<int>("КодУслуги")
                        .HasColumnName("Код_услуги")
                        .HasColumnType("INT");

                    b.Property<int>("КодУслуги1")
                        .HasColumnName("Код_услуги_1")
                        .HasColumnType("INT");

                    b.Property<int>("КодУслуги2")
                        .HasColumnName("Код_услуги_2")
                        .HasColumnType("INT");

                    b.Property<int>("КодУслуги3")
                        .HasColumnName("Код_услуги_3")
                        .HasColumnType("INT");

                    b.Property<int>("ОбщаяСтоимость")
                        .HasColumnName("Общая_стоимость")
                        .HasColumnType("INT");

                    b.Property<int>("ОтметкаОбИсполнении")
                        .HasColumnName("Отметка_об_исполнении")
                        .HasColumnType("INT");

                    b.Property<int>("ОтметкаОбОплате")
                        .HasColumnName("Отметка_об_оплате")
                        .HasColumnType("INT");

                    b.Property<int>("СрокОбщейГарантии")
                        .HasColumnName("Срок_общей_гарантии")
                        .HasColumnType("INT");

                    b.HasIndex("КодЗаказчика");

                    b.HasIndex("КодКомплектующего");

                    b.HasIndex("КодКомплектующего1");

                    b.HasIndex("КодКомплектующего2");

                    b.HasIndex("КодКомплектующего3");

                    b.HasIndex("КодСотрудника");

                    b.HasIndex("КодУслуги");

                    b.HasIndex("КодУслуги1");

                    b.HasIndex("КодУслуги2");

                    b.HasIndex("КодУслуги3");

                    b.ToTable("Заказы");
                });

            modelBuilder.Entity("ComputerFifm.Models.Комплектующие", b =>
                {
                    b.Property<int>("КодКомплектующего")
                        .HasColumnName("Код_комплектующего")
                        .HasColumnType("INT");

                    b.Property<int>("ДатаВыпуска")
                        .HasColumnName("Дата_выпуска")
                        .HasColumnType("INT");

                    b.Property<int>("КодВида")
                        .HasColumnName("Код_вида")
                        .HasColumnType("INT");

                    b.Property<int>("Марка")
                        .HasColumnType("INT");

                    b.Property<int>("Описание")
                        .HasColumnType("INT");

                    b.Property<int>("СрокГарантии")
                        .HasColumnName("Срок_гарантии")
                        .HasColumnType("INT");

                    b.Property<int>("СтранаПроизводитель")
                        .HasColumnName("Страна_производитель")
                        .HasColumnType("INT");

                    b.Property<int>("ФирмаПроизводитель")
                        .HasColumnName("Фирма_производитель")
                        .HasColumnType("INT");

                    b.Property<int>("Характеристики")
                        .HasColumnType("INT");

                    b.Property<int>("Цена")
                        .HasColumnType("INT");

                    b.HasKey("КодКомплектующего");

                    b.HasIndex("КодВида");

                    b.ToTable("Комплектующие");
                });

            modelBuilder.Entity("ComputerFifm.Models.Сотрудники", b =>
                {
                    b.Property<int>("КодСотрудника")
                        .HasColumnName("Код_сотрудника")
                        .HasColumnType("INT");

                    b.Property<int>("Адрес")
                        .HasColumnType("INT");

                    b.Property<int>("Возраст")
                        .HasColumnType("INT");

                    b.Property<int>("КодДолжности")
                        .HasColumnName("Код_должности")
                        .HasColumnType("INT");

                    b.Property<int>("ПаспортныеДанные")
                        .HasColumnName("Паспортные_данные")
                        .HasColumnType("INT");

                    b.Property<int>("Пол")
                        .HasColumnType("INT");

                    b.Property<int>("Телефон")
                        .HasColumnType("INT");

                    b.Property<int>("Фио")
                        .HasColumnName("ФИО")
                        .HasColumnType("INT");

                    b.HasKey("КодСотрудника");

                    b.HasIndex("КодДолжности");

                    b.HasIndex("ПаспортныеДанные")
                        .IsUnique();

                    b.ToTable("Сотрудники");
                });

            modelBuilder.Entity("ComputerFifm.Models.Услуги", b =>
                {
                    b.Property<int>("КодУслуги")
                        .HasColumnName("Код_услуги")
                        .HasColumnType("INT");

                    b.Property<int>("Наименование")
                        .HasColumnType("INT");

                    b.Property<int>("Описание")
                        .HasColumnType("INT");

                    b.Property<int>("Стоимость")
                        .HasColumnType("INT");

                    b.HasKey("КодУслуги");

                    b.ToTable("Услуги");
                });

            modelBuilder.Entity("ComputerFifm.Models.Заказы", b =>
                {
                    b.HasOne("ComputerFifm.Models.Заказчики", "КодЗаказчикаNavigation")
                        .WithMany()
                        .HasForeignKey("КодЗаказчика")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Комплектующие", "КодКомплектующегоNavigation")
                        .WithMany()
                        .HasForeignKey("КодКомплектующего")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Комплектующие", "КодКомплектующего1Navigation")
                        .WithMany()
                        .HasForeignKey("КодКомплектующего1")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Комплектующие", "КодКомплектующего2Navigation")
                        .WithMany()
                        .HasForeignKey("КодКомплектующего2")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Комплектующие", "КодКомплектующего3Navigation")
                        .WithMany()
                        .HasForeignKey("КодКомплектующего3")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Сотрудники", "КодСотрудникаNavigation")
                        .WithMany()
                        .HasForeignKey("КодСотрудника")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Услуги", "КодУслугиNavigation")
                        .WithMany()
                        .HasForeignKey("КодУслуги")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Услуги", "КодУслуги1Navigation")
                        .WithMany()
                        .HasForeignKey("КодУслуги1")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Услуги", "КодУслуги2Navigation")
                        .WithMany()
                        .HasForeignKey("КодУслуги2")
                        .IsRequired();

                    b.HasOne("ComputerFifm.Models.Услуги", "КодУслуги3Navigation")
                        .WithMany()
                        .HasForeignKey("КодУслуги3")
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerFifm.Models.Комплектующие", b =>
                {
                    b.HasOne("ComputerFifm.Models.ВидыКомплектующих", "КодВидаNavigation")
                        .WithMany("Комплектующие")
                        .HasForeignKey("КодВида")
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerFifm.Models.Сотрудники", b =>
                {
                    b.HasOne("ComputerFifm.Models.Должность", "КодДолжностиNavigation")
                        .WithMany("Сотрудники")
                        .HasForeignKey("КодДолжности")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
